on: [push]

name: Release Test

jobs:
  test-release:
    strategy:
      matrix:
        # For these target platforms
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
            install-dist: curl --proto '=https' --tlsv1.2 -L -sSf https://github.com/axodotdev/cargo-dist/releases/download/v0.0.2/installer.sh | sh
          - target: x86_64-apple-darwin
            os: macos-11
            install-dist: curl --proto '=https' --tlsv1.2 -L -sSf https://github.com/axodotdev/cargo-dist/releases/download/v0.0.2/installer.sh | sh
          - target: x86_64-pc-windows-msvc
            os: windows-2019
            install-dist: irm 'https://github.com/axodotdev/cargo-dist/releases/download/v0.0.2/installer.ps1' | iex
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y libgtk-3-dev
      - name: Install cargo-dist
        run: ${{ matrix.install-dist }}
      - name: Run cargo-dist
        # This logic is a bit janky because it's trying to be a polyglot between
        # powershell and bash since this will run on windows, macos, and linux!
        # The two platforms don't agree on how to talk about env vars but they
        # do agree on 'cat' and '$()' so we use that to marshal values between commmands.
        run: |
          # Actually do builds and make zips and whatnot
          cargo dist --target=${{ matrix.target }} --output-format=json > dist-manifest.json
          echo "dist ran successfully"
